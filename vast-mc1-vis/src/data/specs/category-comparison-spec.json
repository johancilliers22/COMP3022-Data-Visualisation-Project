{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "width": "container",
  "height": "container",
  "padding": 5,
  "autosize": {
    "type": "fit",
    "contains": "padding"
  },
  
  "signals": [
    {"name": "selectedLocation", "value": null},
    {"name": "colorScheme", "value": "VSUP"},
    {"name": "appColorScheme", "value": "VSUP"},
    {"name": "boxWidth", "value": 20}
  ],
  
  "data": [
    {
      "name": "sourceData",
      "url": "data/processed/category_summary_aggregated.json",
      "format": {
        "type": "json"
      },
      "transform": [
        {
          "type": "formula",
          "expr": "datum.categoryName || datum.category",
          "as": "categoryLabel"
        }
      ]
    },
    {
      "name": "emptyFallback",
      "values": [
        {"category": "shake_intensity", "categoryLabel": "Shake Intensity", "minValue": 0, "q1Value": 0, "medianValue": 0, "q3Value": 0, "maxValue": 0, "count": 0},
        {"category": "buildings", "categoryLabel": "Buildings", "minValue": 0, "q1Value": 0, "medianValue": 0, "q3Value": 0, "maxValue": 0, "count": 0},
        {"category": "power", "categoryLabel": "Power", "minValue": 0, "q1Value": 0, "medianValue": 0, "q3Value": 0, "maxValue": 0, "count": 0},
        {"category": "medical", "categoryLabel": "Medical", "minValue": 0, "q1Value": 0, "medianValue": 0, "q3Value": 0, "maxValue": 0, "count": 0},
        {"category": "sewer_and_water", "categoryLabel": "Sewer & Water", "minValue": 0, "q1Value": 0, "medianValue": 0, "q3Value": 0, "maxValue": 0, "count": 0},
        {"category": "roads_and_bridges", "categoryLabel": "Roads & Bridges", "minValue": 0, "q1Value": 0, "medianValue": 0, "q3Value": 0, "maxValue": 0, "count": 0}
      ]
    },
    {
      "name": "displayData",
      "source": "sourceData",
      "transform": [
        {
          "type": "collect"
        },
        {
          "type": "formula",
          "expr": "length(data('sourceData')) === 0 ? data('emptyFallback') : data('sourceData')",
          "as": "finalDataSource"
        }
      ]
    }
  ],
  
  "scales": [
    {
      "name": "x",
      "type": "band",
      "domain": {"data": "displayData", "field": "categoryLabel", "sort": true},
      "range": "width",
      "padding": 0.2
    },
    {
      "name": "y",
      "type": "linear",
      "domain": [0, 10],
      "range": "height",
      "nice": true,
      "zero": true
    }
  ],
  
  "axes": [
    {
      "orient": "bottom",
      "scale": "x",
      "grid": false,
      "title": "Damage Category",
      "labelAngle": -45,
      "labelAlign": "right",
      "titlePadding": 15
    },
    {
      "orient": "left",
      "scale": "y",
      "grid": true,
      "tickCount": 5,
      "title": "Average Damage Level"
    },
    {
      "orient": "top",
      "scale": "x",
      "domain": false,
      "ticks": false,
      "labels": false,
      "title": null,
      "grid": false
    }
  ],
  
  "marks": [
    {
      "type": "rect",
      "from": {"data": "displayData"},
      "encode": {
        "enter": {
          "x": {"scale": "x", "field": "categoryLabel"},
          "width": {"scale": "x", "band": 1},
          "y": {"scale": "y", "field": "valueToDisplay"},
          "y2": {"scale": "y", "value": 0},
          "fill": {"field": "plotColor"},
          "tooltip": {
            "signal": "{'Category': datum.categoryLabel, 'Avg. Value': format(datum.valueToDisplay, '.1f'), 'Min Value': format(datum.minValue, '.1f'), 'Max Value': format(datum.maxValue, '.1f'), 'Confidence': format(datum.confidence, '.0%'), 'Source Locations/Reports': datum.count}"
          }
        },
        "update": {
          "fillOpacity": {"value": 0.8}
        },
        "hover": {
          "fillOpacity": {"value": 1}
        }
      }
    },
    {
      "type": "text",
      "from": {"data": "displayData"},
      "encode": {
        "enter": {
          "x": {"scale": "x", "field": "categoryLabel", "band": 0.5},
          "y": {"scale": "y", "field": "valueToDisplay", "offset": -10},
          "align": {"value": "center"},
          "baseline": {"value": "bottom"},
          "text": {"signal": "isValid(datum.valueToDisplay) && isFinite(datum.valueToDisplay) ? format(datum.valueToDisplay, '.1f') : 'N/A'"}
        }
      }
    },
    {
      "type": "rule",
      "from": {"data": "displayData"},
      "encode": {
        "enter": {
          "x": {"scale": "x", "field": "categoryLabel", "band": 0.5},
          "y": {"scale": "y", "field": "minValue"},
          "y2": {"scale": "y", "field": "q1Value"},
          "stroke": {"value": "#444"},
          "strokeWidth": {"value": 1}
        }
      }
    },
    {
      "type": "rule",
      "from": {"data": "displayData"},
      "encode": {
        "enter": {
          "x": {"scale": "x", "field": "categoryLabel", "band": 0.5},
          "y": {"scale": "y", "field": "q3Value"},
          "y2": {"scale": "y", "field": "maxValue"},
          "stroke": {"value": "#444"},
          "strokeWidth": {"value": 1}
        }
      }
    },
    {
      "type": "rect",
      "from": {"data": "displayData"},
      "encode": {
        "enter": {
          "x": {"scale": "x", "field": "categoryLabel", "band": 0.5, "offset": {"signal": "-boxWidth / 2"}},
          "width": {"signal": "boxWidth"},
          "y": {"scale": "y", "field": "q1Value"},
          "y2": {"scale": "y", "field": "q3Value"},
          "fill": {"field": "plotColor"},
          "stroke": {"value": "#333"},
          "strokeWidth": {"value": 0.5},
          "tooltip": {
            "signal": "{'Category': datum.categoryLabel, 'Median': format(datum.medianValue, '.1f'), 'Q1': format(datum.q1Value, '.1f'), 'Q3': format(datum.q3Value, '.1f'), 'Min': format(datum.minValue, '.1f'), 'Max': format(datum.maxValue, '.1f'), 'Count': datum.count, 'Confidence': format(datum.confidence, '.0%') }"
          }
        },
        "update": {
          "fillOpacity": {"value": 0.7}
        },
        "hover": {
          "fillOpacity": {"value": 1}
        }
      }
    },
    {
      "type": "rule",
      "from": {"data": "displayData"},
      "encode": {
        "enter": {
          "x": {"scale": "x", "field": "categoryLabel", "band": 0.5, "offset": {"signal": "-boxWidth / 2"}},
          "x2": {"scale": "x", "field": "categoryLabel", "band": 0.5, "offset": {"signal": "boxWidth / 2"}},
          "y": {"scale": "y", "field": "medianValue"},
          "stroke": {"value": "#000"},
          "strokeWidth": {"value": 1.5}
        }
      }
    },
    {
      "type": "rule",
      "from": {"data": "displayData"},
      "encode": {
        "enter": {
          "x": {"scale": "x", "field": "categoryLabel", "band": 0.5, "offset": -5},
          "x2": {"scale": "x", "field": "categoryLabel", "band": 0.5, "offset": 5},
          "y": {"scale": "y", "field": "minValue"},
          "stroke": {"value": "#444"},
          "strokeWidth": {"value": 1}
        }
      }
    },
    {
      "type": "rule",
      "from": {"data": "displayData"},
      "encode": {
        "enter": {
          "x": {"scale": "x", "field": "categoryLabel", "band": 0.5, "offset": -5},
          "x2": {"scale": "x", "field": "categoryLabel", "band": 0.5, "offset": 5},
          "y": {"scale": "y", "field": "maxValue"},
          "stroke": {"value": "#444"},
          "strokeWidth": {"value": 1}
        }
      }
    },
    {
      "type": "text",
      "from": {"data": "displayData"},
      "encode": {
        "enter": {
          "x": {"scale": "x", "field": "categoryLabel", "band": 0.5},
          "y": {"scale": "y", "field": "maxValue", "offset": -5},
          "text": {"signal": "datum.count > 0 ? format(datum.maxValue, '.1f') : ''"},
          "align": {"value": "center"},
          "baseline": {"value": "bottom"},
          "fontSize": {"value": 10},
          "fill": {"value": "#333"}
        }
      }
    },
    {
      "type": "text",
      "from": {"data": "displayData"},
      "encode": {
        "enter": {
          "x": {"scale": "x", "field": "categoryLabel", "band": 0.5},
          "y": {"scale": "y", "field": "minValue", "offset": 5},
          "text": {"signal": "datum.count > 0 ? format(datum.minValue, '.1f') : ''"},
          "align": {"value": "center"},
          "baseline": {"value": "top"},
          "fontSize": {"value": 10},
          "fill": {"value": "#333"}
        }
      }
    },
    {
      "type": "text",
      "from": {"data": "displayData"},
      "encode": {
        "enter": {
          "x": {"scale": "x", "field": "categoryLabel", "band": 0.5, "offset": {"signal": "boxWidth / 2 + 4"}},
          "y": {"scale": "y", "field": "medianValue"},
          "text": {"signal": "datum.count > 0 ? format(datum.medianValue, '.1f') : ''"},
          "align": {"value": "left"},
          "baseline": {"value": "middle"},
          "fontSize": {"value": 10},
          "fill": {"value": "#e67e22"},
          "fontWeight": {"value": "bold"}
        }
      }
    }
  ]
} 